{"version":3,"sources":["./src/app/change-pass/change-pass.component.ts","./src/app/change-pass/change-pass.component.html","./src/app/customization/customization.component.ts","./src/app/customization/customization.component.html","./src/app/current-period/current-period.component.ts","./src/app/current-period/current-period.component.html","./src/app/current-period/table/table.component.ts","./src/app/current-period/table/table.component.html","./src/environments/environment.ts","./src/app/library/auth.service.ts","./src/app/main-component/main-component.component.ts","./src/app/main-component/main-component.component.html","./src/app/library/host.service.ts","./src/app/current-period/budget-item-form/budget-item-form.component.ts","./src/app/current-period/budget-item-form/budget-item-form.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/privacy/privacy.component.ts","./src/app/privacy/privacy.component.html","./src/app/app.module.ts","./src/app/total-budget.service.ts","./src/app/delete-akk/delete-akk.component.ts","./src/app/delete-akk/delete-akk.component.html","./src/app/budget-items.service.ts","./src/app/reg/reg.component.ts","./src/app/reg/reg.component.html","./src/app/top/top.component.ts","./src/app/top/top.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { AnswerAuth } from '../library/answer-auth';\nimport { AuthService } from '../library/auth.service';\n\n@Component({\n  selector: 'app-change-pass',\n  templateUrl: './change-pass.component.html',\n  styleUrls: ['./change-pass.component.scss']\n})\nexport class ChangePassComponent implements OnInit {\n\n  tempPass: string\n  changePassForm: FormGroup = new FormGroup({\n    oldPass: new FormControl(null, this.oldPassValidator),\n    newPass: new FormControl(null, Validators.required),\n  });\n\n  constructor(\n    public dialogRef: MatDialogRef<ChangePassComponent>,\n    private authService: AuthService,\n    private _snackBar: MatSnackBar,\n    private router: Router,\n    ) { }\n\n  ngOnInit(): void {\n    this.tempPass = localStorage.getItem(\"tempPass\");\n  }\n\n  submit(){\n    let passForm: any = this.changePassForm.value;\n    if(this.tempPass){\n      let body = {\n        tempPass: this.tempPass,\n        newPass: passForm.newPass,\n        id: localStorage.accessToken\n      };\n      this.authService.changePass(body).subscribe(\n        (data:AnswerAuth)=>{\n          if(data.success){\n            localStorage.removeItem(\"tempPass\");\n            this._snackBar.open(\"Пароль успешно заменен\", \"Успешно!\", {duration: 2000, });\n            this.authService.getUserName();\n            this.dialogRef.close();\n            this.router.navigate(['/']);\n          }else{\n            if (data.msg == \"jwt expired\"){\n              localStorage.removeItem(\"tempPass\");\n              this._snackBar.open(\"Истек срок действительности временного пароля. После завершения текущей сессии повторите попытку.\", \"Ошибка\"); \n              this.dialogRef.close();  \n              this.router.navigate(['/']);\n              this.authService.getUserName();\n            }\n          }\n        },\n        err=> {console.log(err)}\n      );\n\n    }else{\n      let body={\n        oldPass: passForm.oldPass,\n        newPass: passForm.newPass,\n        id: localStorage.accessToken\n      }\n      this.authService.changePass(body).subscribe(\n        (data:AnswerAuth)=> {\n          if(data.success){\n            this.dialogRef.close();\n            this.router.navigate(['/']);\n            this._snackBar.open(\"Пароль успешно заменен\", \"Успешно!\", {duration: 2000, })\n          }else{\n            if(data.msg==\"Старый пароль не верен\"){\n              this.dialogRef.close();\n              this.router.navigate(['/']);\n              this._snackBar.open(data.msg, \"Ошибка!\");\n            }\n          }\n        }\n      )\n\n    }\n\n  }\n\n  onClickXbutton(){\n    this.router.navigate(['/']);\n  }\n  \n  oldPassValidator(control: FormControl): {[s:string]:boolean}{\n         \n    if(!this.tempPass && control.value===false){\n        return {\"tempPas\": true};\n    }\n    return null; \n  }\n\n\n}\n","<div class=\"container\">\n    <h1>Смена пароля</h1>\n    <form class=\"example-form\" [formGroup]=\"changePassForm\" (ngSubmit)=\"submit()\">\n        <mat-form-field *ngIf=\"!tempPass\">\n            <input placeholder=\"old password\" matInput type=\"password\" formControlName=\"oldPass\">\n            <mat-error *ngIf=\"changePassForm.controls.oldPass.invalid\">Введите старый пароль</mat-error>\n        </mat-form-field>\n        <br> \n        <mat-form-field>\n            <input placeholder=\"new password\" matInput type=\"password\" formControlName=\"newPass\">\n            <mat-error *ngIf=\"changePassForm.controls.newPass.invalid\">Введите новый пароль</mat-error>\n        </mat-form-field>\n        <br> \n\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"changePassForm.invalid\">Сменить пароль</button>\n\n    </form>\n    \n    <span class=\"xbutton\" (click)=\"onClickXbutton()\"> <button mat-icon-button mat-dialog-close>\n            <mat-icon>close</mat-icon>\n        </button></span>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ChangePassComponent } from '../change-pass/change-pass.component';\r\nimport { DeleteAkkComponent } from '../delete-akk/delete-akk.component';\r\n\r\n@Component({\r\n  selector: 'app-customization',\r\n  templateUrl: './customization.component.html',\r\n  styleUrls: ['./customization.component.scss']\r\n})\r\nexport class CustomizationComponent implements OnInit {\r\n\r\n  constructor(\r\n    private dialog: MatDialog\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  showChangePass(){\r\n    this.dialog.open(ChangePassComponent);\r\n  }\r\n  showDeleteAkk(){\r\n    this.dialog.open(DeleteAkkComponent);\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\n    <h1>Настройки </h1>\n    <button mat-menu-item (click)=\"showChangePass()\">\n        <span>Сменить пароль</span>\n      </button>\n      <br>\n            <button mat-menu-item (click)=\"showDeleteAkk()\">\n        <span>Удалить аккаунт</span>\n      </button>\n      <span class=\"xbutton\" > <button mat-icon-button mat-dialog-close>\n        <mat-icon>close</mat-icon>\n    </button></span>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-current-period',\n  templateUrl: './current-period.component.html',\n  styleUrls: ['./current-period.component.scss']\n})\nexport class CurrentPeriodComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-budget-item-form></app-budget-item-form>\n<app-table></app-table>\n","import {AfterViewInit, Component, ViewChild} from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { BudgetItem } from 'src/app/budget-item';\nimport { BudgetItemsService } from 'src/app/budget-items.service';\n\n\n\n\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent implements AfterViewInit {\n  BUDGET_ITEMS_DATA: BudgetItem[];\n  budgetItems;\n  tableColumns:string[]=[\"amount\", \"date\", \"category\", \"description\"]\n\n  constructor(private budgetItemsService: BudgetItemsService){\n\n  }\n  private _ready(){\n    document.getElementsByClassName('mat-paginator-page-size-label')[0].innerHTML='Показать по '\n  }\n  \n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  ngAfterViewInit() {\n    this.budgetItemsService.clearBudgetItems(false);\n    this.budgetItemsService.fetchBudgetItems();\n    this.budgetItemsService.getBudgetItems();\n\n    document.addEventListener(\"DOMContentLoaded\", this._ready);\n    this.budgetItemsService.subject.subscribe({next: bItems=>{\n      this.BUDGET_ITEMS_DATA = bItems;\n      this.budgetItems = new MatTableDataSource<BudgetItem>(this.BUDGET_ITEMS_DATA);\n      this.budgetItems.paginator = this.paginator;\n    }})\n  }\n\n  deleteBudgetItem(e){\n    let elem  = e.currentTarget;\n    let index: number = +elem.children[0].innerHTML\n    this.budgetItemsService.deleteBudgetItem(index);\n  }\n\n  \n\n}\n","<div class=\"mat-elevation-z8\">\n    <table mat-table  [dataSource]=\"budgetItems\">\n  \n      <!-- Position Column -->\n      <ng-container matColumnDef=\"amount\">\n        <th style=\"padding-right: 5px;\" mat-header-cell *matHeaderCellDef> Сумма </th>\n        <td style=\"padding-right: 5px;\" mat-cell *matCellDef=\"let element\" [ngClass]=\"{green: this.element.amount>=0, red: this.element.amount<0}\"> {{element.amount}} </td>\n      </ng-container>\n  \n      <!-- Name Column -->\n      <ng-container matColumnDef=\"date\">\n        <th style=\"padding-right: 5px;\" mat-header-cell *matHeaderCellDef> Дата </th>\n        <td   style=\"padding-right: 5px;\" mat-cell *matCellDef=\"let element\"  [ngClass]=\"{green: this.element.amount>=0, red: this.element.amount<0}\"> {{element.date|date:\"dd.MM.yyyy\"}} </td>\n      </ng-container>\n  \n      <!-- Weight Column -->\n      <ng-container matColumnDef=\"category\">\n        <th style=\"padding-right: 5px;\" mat-header-cell *matHeaderCellDef> Категория </th>\n        <td  style=\"padding-right: 5px;\" mat-cell *matCellDef=\"let element\"  [ngClass]=\"{green: this.element.amount>=0, red: this.element.amount<0}\"> {{element.category}} </td>\n      </ng-container>\n  \n      <!-- Symbol Column -->\n      <ng-container matColumnDef=\"description\">\n        <th mat-header-cell *matHeaderCellDef> Комментарий </th>\n        <td mat-cell *matCellDef=\"let element;let i = index\"  class=\"description\" [ngClass]=\"{green: this.element.amount>=0, red: this.element.amount<0}\"> {{element.description}} \n          <mat-icon  (click) = \"deleteBudgetItem($event)\" class=\"oun-input-icon\">delete_forever <span style=\"display: none;\">{{i}}</span></mat-icon>\n        </td>\n      </ng-container>\n\n\n\n  \n      <tr mat-header-row *matHeaderRowDef=\"tableColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: tableColumns;\"></tr>\n    </table>\n  \n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n\n  </div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient } from \"@angular/common/http\";\r\nimport { HostService } from './host.service';\r\nimport { RegFormValues } from './reg-form-values';\r\nimport { UserLoginForm } from './user-login-form';\r\nimport { AnswerAuth } from './answer-auth';\r\nimport { BudgetItem } from '../budget-item';\r\nimport { EmptyError, Observable, Subject } from 'rxjs';\r\nimport { EmailValidator } from '@angular/forms';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  private userName: string;\r\n  subject = new Subject<string>();\r\n\r\n  constructor(private http: HttpClient, private hostService: HostService,) { }\r\n\r\n  registerUser(regFormValues: RegFormValues) {\r\n    if (!regFormValues.privacyPolicy) return new Observable(subscriber => {\r\n      subscriber.next(JSON.stringify({ success: false, msg: \"Нет согласия с Политикой Конфидециальности\" }));\r\n    });\r\n    else {\r\n      let headers = new HttpHeaders();\r\n      headers.append(\"contentType\", \"application/json\");\r\n      return this.http\r\n        .post(this.hostService.getHost() + \"account/reg\", regFormValues, { headers: headers })\r\n    }\r\n  }\r\n\r\n\r\n  loginUser(user: UserLoginForm) {\r\n    let headers = new HttpHeaders();\r\n    headers.append(\"contentType\", \"application/json\");\r\n\r\n    return new Observable(subscriber => {\r\n\r\n      this.http\r\n        .post(this.hostService.getHost() + \"account/login\", user, { headers: headers }).subscribe(\r\n          (data: AnswerAuth) => {\r\n            if (data.success) {\r\n              this.userName = data.userName;\r\n              localStorage.setItem(\"userName\", data.userName);\r\n              localStorage.setItem(\"accessToken\", data.accessToken);\r\n              localStorage.setItem(\"refreshToken\", data.refreshToken);\r\n              this.subject.next(this.userName);\r\n            }\r\n            subscriber.next(data);\r\n          }\r\n        );\r\n    })\r\n  }\r\n\r\n  public logOut() {\r\n    let headers = new HttpHeaders();\r\n    headers.append(\"contentType\", \"application/json\");\r\n    let logout = { accessToken: localStorage.getItem(\"accessToken\") }\r\n    return new Observable(subscriber => {\r\n\r\n      this.http\r\n        .post(this.hostService.getHost() + \"account/logout\", logout, { headers: headers }).subscribe(\r\n          (data: AnswerAuth) => {\r\n            if (data.success) {\r\n              this.userName = null;\r\n              localStorage.clear();\r\n              this.subject.next(this.userName);\r\n            } else {\r\n              console.log(data.msg);\r\n              localStorage.clear();\r\n              this.getUserName();\r\n            }\r\n            subscriber.next(data);\r\n          }\r\n\r\n        )\r\n\r\n    })\r\n\r\n  }\r\n\r\n  public getUserName() {\r\n    this.userName = localStorage.getItem(\"userName\");\r\n    this.subject.next(this.userName);\r\n  }\r\n\r\n  refreshTokens() {\r\n    let tokens = {\r\n      accessToken: localStorage.getItem(\"accessToken\"),\r\n      refreshToken: localStorage.getItem(\"refreshToken\")\r\n    }\r\n    let headers = new HttpHeaders();\r\n    headers.append(\"contentType\", \"application/json\");\r\n    return new Observable(subscriber => {\r\n      this.http\r\n        .post(this.hostService.getHost() + \"account/refreshTokens\", tokens, { headers: headers }).subscribe(\r\n          (data: AnswerAuth) => {\r\n            if (data.success) {\r\n              console.log(\"refresh\");\r\n              localStorage.setItem(\"userName\", data.userName);\r\n              localStorage.setItem(\"accessToken\", data.accessToken);\r\n              localStorage.setItem(\"refreshToken\", data.refreshToken);\r\n              this.getUserName();\r\n\r\n              subscriber.next({ success: true, msg: \"OK\" });\r\n\r\n            }\r\n            else {\r\n              this.logOut().subscribe((data: AnswerAuth) => {\r\n                window.location.reload()\r\n              })\r\n            };\r\n          },\r\n          err => console.log(err)\r\n        )\r\n\r\n\r\n\r\n    })\r\n\r\n  }\r\n\r\n  forgetPass(email: String) {\r\n    let body = {\r\n      email: email\r\n    }\r\n    let headers = new HttpHeaders();\r\n    headers.append(\"contentType\", \"application/json\");\r\n\r\n    return this.http.post(this.hostService.getHost() + \"account/forgetPass\", body, { headers: headers })\r\n\r\n  }\r\n\r\n  getForgetPass(accessToken: string) {\r\n    let body = {\r\n      accessToken: accessToken\r\n    }\r\n    let headers = new HttpHeaders();\r\n    headers.append(\"contentType\", \"application/json\");\r\n    return new Observable(subscriber => {\r\n      this.http.post(this.hostService.getHost() + \"account/getForgetPass\", body, { headers: headers }).subscribe(\r\n        (data: AnswerAuth) => {\r\n          if (data.success) {\r\n            this.userName = data.userName;\r\n            localStorage.setItem(\"userName\", data.userName);\r\n            localStorage.setItem(\"accessToken\", data.accessToken);\r\n            localStorage.setItem(\"refreshToken\", data.refreshToken);\r\n            localStorage.setItem(\"tempPass\", data.tempPassToken);\r\n            this.getUserName();\r\n            subscriber.next({ success: true, msg: data.msg, data: data });\r\n          } else {\r\n            if (data.msg == \"jwt expired\") {\r\n              subscriber.next({ success: false, msg: \"jwt expired\" });\r\n            }\r\n          }\r\n        }\r\n      )\r\n    })\r\n\r\n  }\r\n\r\n  changePass(body){\r\n    let headers = new HttpHeaders();\r\n    headers.append(\"contentType\", \"application/json\");\r\n\r\n    return this.http.post(this.hostService.getHost() + \"account/changePass\", body, { headers: headers })\r\n\r\n  }\r\n\r\n  deleteAkk(body){\r\n    let headers = new HttpHeaders();\r\n    headers.append(\"contentType\", \"application/json\");\r\n    return new Observable(subscriber=>{\r\n      this.http.post(this.hostService.getHost() + \"account/deleteAkk\", body, { headers: headers }).subscribe(\r\n        (data:AnswerAuth)=>{\r\n          if(data.success){\r\n            localStorage.clear();\r\n            this.getUserName();\r\n            subscriber.next(data);\r\n          }\r\n          else{\r\n            subscriber.next(data);\r\n          }\r\n        }\r\n      )\r\n    })\r\n  }\r\n\r\n\r\n  /* -------------------------------------------------------------------------- */\r\n  /*                        budgetItemsService ServerSide                       */\r\n  /* -------------------------------------------------------------------------- */\r\n\r\n  sendAddItem(bitem: BudgetItem) {\r\n    let body = {\r\n      accessToken: localStorage.getItem(\"accessToken\"),\r\n      bitem: bitem,\r\n    }\r\n    console.log(bitem)\r\n    let headers = new HttpHeaders();\r\n    headers.append(\"contentType\", \"application/json\");\r\n    //отправляем запрос без проверки выполнен ли вход, сервер разбется с этим лучше\r\n    return new Observable(subscriber => {\r\n      this.http.post(this.hostService.getHost() + 'budgetItems/addItem', body, { headers: headers }).subscribe(\r\n        (data: AnswerAuth) => {\r\n          if (data.success) {\r\n            console.log(data.success + \": \" + data.msg);\r\n          } else {\r\n            if (data.msg == \"jwt expired\") {// просрочен акссесс токен\r\n              this.refreshTokens().subscribe(\r\n                (data: AnswerAuth) => {\r\n                  if (data.success) this.sendAddItem(bitem).subscribe(\r\n                    (data: AnswerAuth) => {\r\n                      console.log(data.success + \": \" + data.msg);\r\n                    },\r\n                    err => {\r\n                      console.log(err);\r\n                    }\r\n                  );\r\n                }\r\n              )\r\n            } else {\r\n              if (data.msg == \"Нет токена\") {//вход не выполнен\r\n                subscriber.next({ success: true, msg: \"Не выполнен вход\" })\r\n              } else { //другая ошибка - разлогиниваем\r\n                console.log(data.success + \": \" + data.msg);\r\n                this.logOut().subscribe(\r\n                  (data: AnswerAuth) => subscriber.next({ success: false, msg: \"logout\" })\r\n                )\r\n              }\r\n            }\r\n\r\n          }\r\n        },\r\n        err => {\r\n          console.log(err);\r\n        }\r\n      )\r\n\r\n    })\r\n\r\n\r\n  }\r\n\r\n  sendDeleteItem(itemId) {\r\n    let body = {\r\n      accessToken: localStorage.getItem(\"accessToken\"),\r\n      itemId: itemId,\r\n    }\r\n    let headers = new HttpHeaders();\r\n    headers.append(\"contentType\", \"application/json\");\r\n\r\n    return new Observable(subscriber => {\r\n      this.http.post(this.hostService.getHost() + 'budgetItems/deleteItem', body, { headers: headers }).subscribe(\r\n        (data: AnswerAuth) => {\r\n          if (!data.success) {\r\n            if (data.msg === \"jwt expired\") {\r\n              this.refreshTokens().subscribe(\r\n                (data: AnswerAuth) => {\r\n                  if (data.success) {\r\n                    this.sendDeleteItem(itemId).subscribe(\r\n                      err => console.log(err)\r\n                    )\r\n                  }\r\n                }\r\n              )\r\n            } else {\r\n              if (data.msg == \"Нет токена\") {//вход не выполнен\r\n                subscriber.next({ success: true, msg: \"Не выполнен вход\" })\r\n              } else { //другая ошибка - разлогиниваем\r\n                console.log(data.success + \": \" + data.msg);\r\n                this.logOut().subscribe(\r\n                  (data: AnswerAuth) => subscriber.next({ success: false, msg: \"logout\" })\r\n                )\r\n              }\r\n            }\r\n          }\r\n        },\r\n        err => {\r\n          console.log(err);\r\n        }\r\n      )\r\n    })\r\n  }\r\n\r\n\r\n  sendFetchBudgetItems() {\r\n    let body = {\r\n      accessToken: localStorage.getItem(\"accessToken\"),\r\n    }\r\n    let headers = new HttpHeaders();\r\n    headers.append(\"contentType\", \"application/json\");\r\n\r\n    return new Observable(subscriber => {\r\n      this.http.post(this.hostService.getHost() + 'budgetItems/fetchBudgetItems', body, { headers: headers }).subscribe(\r\n        (data: AnswerAuth) => {\r\n          if (!data.success) {\r\n\r\n            if (data.msg === \"jwt expired\") {\r\n              this.refreshTokens().subscribe(\r\n                (data: AnswerAuth) => {\r\n                  if (data.success) {\r\n                    this.sendFetchBudgetItems().subscribe(\r\n                      (data: AnswerAuth) => {\r\n                        if (data.success) subscriber.next(data);\r\n                      },\r\n                      err => console.log(err)\r\n                    )\r\n                  }\r\n                }\r\n              )\r\n            } else {\r\n              if (data.msg == \"Нет токена\") {//вход не выполнен\r\n                subscriber.next({ success: false, msg: \"Не выполнен вход\" })\r\n              } else { //другая ошибка - разлогиниваем\r\n                console.log(data.success + \": \" + data.msg);\r\n                this.logOut().subscribe(\r\n                  (data: AnswerAuth) => subscriber.next({ success: false, msg: \"logout\" })\r\n                )\r\n              }\r\n            }\r\n\r\n          } else {\r\n            subscriber.next(data);\r\n          }\r\n        }\r\n      )\r\n    })\r\n\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ChangePassComponent } from '../change-pass/change-pass.component';\nimport { AnswerAuth } from '../library/answer-auth';\nimport { AuthService } from '../library/auth.service';\nimport { TotalBudgetService } from '../total-budget.service';\n\n\n@Component({\n  selector: 'app-main-component',\n  templateUrl: './main-component.component.html',\n  styleUrls: ['./main-component.component.scss']\n})\nexport class MainComponentComponent implements OnInit {\n  totalBudget: number; \n  constructor(\n    private totalbudgetService: TotalBudgetService,\n    private route: ActivatedRoute,\n    private authService: AuthService,\n    public dialog: MatDialog,\n    private _snackBar: MatSnackBar,\n    private router: Router\n\n\n     ) { }\n\n  ngOnInit(): void {\n    this.totalbudgetService.getTotalBudget();\n    this.totalbudgetService.subject.subscribe({next: tBudget=>{\n      this.totalBudget = tBudget;\n    }})\n    this.viewChangePass();\n  }\n\n  private viewChangePass(){\n    console.log(this.router.url)\n    if(location.href.indexOf(\"forgetPass\")!==-1){\n      console.log(\"top\")\n      this.route.queryParams.subscribe(\n        (queryParam: any)=>{\n          let accessToken= queryParam['id'];\n          console.log(\"accessToken: \"+queryParam['id'])\n          this.authService.getForgetPass(accessToken).subscribe(\n            (data:AnswerAuth)=>{\n              if(data.success){\n                this.dialog.open(ChangePassComponent);\n              }else{\n                if(data.msg==\"jwt expired\"){\n                  this._snackBar.open(\"Срок действительности запроса на смену пароля истёк. Пожалуйста повторите попытку\", \"Ошибка!\");\n                  this.router.navigate(['/']);\n                }\n              }\n            }\n          )\n        }\n      )\n    }\n  }\n\n}\n","<div class=\"body-app\">\n    <div class=\"oun-mainBord \" [ngClass]=\"{'green': totalBudget>=0, 'red': totalBudget<0}\">\n      <div class=\"oun-mainBord-name\"><h3 style=\"font-size: 20px;\">У вас на счету:</h3></div>\n      <div class=\"oun-mainBord-totalBudget\"><h2 style=\"font-size: 23px;\">{{totalBudget|currency:'RUB':'symbol-narrow'}}</h2></div>\n    </div>\n  \n   <app-current-period></app-current-period> \n  \n  </div>\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HostService {\r\n  private host:string = '';\r\n\r\n  constructor() { }\r\n  getHost(){\r\n    return this.host;\r\n  }\r\n}\r\n","\nimport { Component, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { Observable } from \"rxjs\";\nimport { map, startWith } from \"rxjs/operators\";\nimport { BudgetItemsService } from \"src/app/budget-items.service\";\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: \"app-budget-item-form\",\n  templateUrl: \"./budget-item-form.component.html\",\n  styleUrls: [\"./budget-item-form.component.scss\"],\n})\nexport class BudgetItemFormComponent implements OnInit {\n  budgetForm: FormGroup = new FormGroup({\n    amount: new FormControl( null, Validators.required),\n    date: new FormControl(this._formatDate(new Date()),Validators.required),\n    category: new FormControl(\"\", Validators.required),\n    description: new FormControl(\"\"),\n  });\n  filteredOptions: Observable<string[]>;\n  categories: string[] =[] ;\n\n  constructor(\n    private budgetItemsService: BudgetItemsService, \n    private _snackBar: MatSnackBar \n    ) {}\n\n  ngOnInit() {\n    this.filteredOptions = this.budgetForm.controls[\n      \"category\"\n    ].valueChanges.pipe(\n      startWith(\"\"),\n      map((value) => this._filter(value))\n    );\n\n   this.budgetItemsService.getBudgetItems();\n\n\n    this.budgetItemsService.subject.subscribe({\n      next: bItems=> {\n        this.categories = bItems.map(item=> item.category);\n        this.categories= this._filterCategory(this.categories);\n        this.budgetForm.controls.category.setValue('');\n      }\n    })\n  }\n\n  submit(){\n    let bItem: any = this.budgetForm.value;\n    let now:Date = new Date();\n    bItem.date = new Date(bItem.date);\n    bItem.date.setHours(now.getHours());\n    bItem.date.setMinutes(now.getMinutes());\n    bItem.date.setSeconds(now.getSeconds());\n    bItem.itemID = this._generateItemID();\n\n    this.budgetItemsService.addBudgetItem(bItem);\n    this.shoCompleteMessage();\n    this.budgetForm.controls.amount.reset();\n    this.budgetForm.controls.category.setValue('');\n    this.budgetForm.controls.description.reset();\n}\n\n  shoCompleteMessage(){\n    this._snackBar.open(\"Запись добавлена\",\"Успешно\", {\n      duration: 2000,\n    });\n  }\n\n\n  private _generateItemID():string{\n  \n    let id:string= Math.random()*Math.random()*1000000+\".\"+(+new Date()) ;\n    return id\n  }\n\n  private _filterCategory(categoryArr: string[]) {\n    let arrRes: string[] =[];\n    categoryArr.forEach((item :string) =>{\n      if (arrRes.indexOf(item)==-1) arrRes.push(item);\n    })\n   this.budgetForm.controls.amount\n    return   arrRes;\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.categories.filter(\n      (option) => option.toLowerCase().indexOf(filterValue) === 0\n    );\n  }\n  private _formatDate(date: Date): string {\n    let year: string = \"\"+date.getFullYear();\n    let month: number = date.getMonth() + 1;\n    let monthStr: string;\n    if (month < 10) monthStr = \"0\" + month;\n    else monthStr = \"\" + month;\n    let day : number =date.getDate();\n    let dayStr: string;\n    if (day < 10) dayStr = \"0\" + day\n    else dayStr = \"\" + day;\n    return year + \"-\" + monthStr+ \"-\" + dayStr;\n  }\n\n}\n","<div class=\"container\">\n  <p>Запишите свой доход (положительное число \"Суммы\") или расход (отрицательное) к своему бюджету</p>\n    <form class=\"example-form\" [formGroup]=\"budgetForm\" (ngSubmit)=\"submit()\">\n\n      <mat-form-field class=\"example-form-field\">\n        <input placeholder=\"Сумма\" matInput type=\"number\" formControlName=\"amount\">\n        <mat-error *ngIf=\"budgetForm.controls.amount.invalid\">Введите сумму</mat-error>\n      </mat-form-field>\n      <mat-form-field class=\"example-form-field\">\n        <input placeholder=\"Дата\" matInput type=\"date\" formControlName=\"date\" >\n        <mat-error *ngIf=\"budgetForm.controls.date.invalid\">Выберите дату</mat-error>\n      </mat-form-field>\n      <mat-form-field class=\"example-full-width\">\n          <input type=\"text\"\n                 placeholder=\"Категория\"\n                 aria-label=\"Number\"\n                 matInput\n                 formControlName=\"category\"\n                 [matAutocomplete]=\"auto\">\n          <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n              {{option}}\n            </mat-option>\n          </mat-autocomplete>\n          <mat-error *ngIf=\"budgetForm.controls.category.invalid\">Выберите категорию</mat-error>\n     </mat-form-field>\n     <mat-form-field class=\"example-form-field\">\n       <input matInput placeholder=\"Комментарий\" type=\"text\" formControlName=\"description\">\n      </mat-form-field>\n      <button mat-raised-button color=\"primary\" [disabled]=\"budgetForm.invalid\">Добавить</button>\n\n    </form>\n\n\n\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'Simple Budget Analitik';\n\n  constructor(){\n\n  }\n\n  ngOnInit(){\n\n\n  }\n\n}\n","  \n<app-top></app-top>\n<router-outlet></router-outlet>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-privacy',\n  templateUrl: './privacy.component.html',\n  styleUrls: ['./privacy.component.scss']\n})\nexport class PrivacyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ol class=\"privacyContainer\">\n    <h1>Политика конфиденциальности</h1>\n    <li> <h2>Общие положения  </h2></li>\n        <p> Приложение ТВОЙ БЮДЖЕТ (далее – «Приложение») - это инструмент для введения журнала доходов и расходов, \n            а также их анализа.</p>\n        <p>  Настоящая Политика конфиденциальности (далее – «Политика») регулирует отношения между администрацией \n            Приложения (далее – «Администрация») и Вами (физическим лицом пользователем сети Интернет), далее  \n            «Пользователь», по поводу обработки информации Пользователя.</p>\n    <li> <h2>Описание информации </h2></li>\n        <p>Информация Пользователя включает в себя:</p>\n        <ol   ol>\n            <li>Учетные данные Пользователя, вводимые при регистрации.</li>\n            <li>Записи, созданные самим Пользователем, описывающие доходы и расходы Пользователя, формирующие его \n                так называемый \"бюджет\".</li>\n        </ol>\n        <p>Все записи доходов и расходов не могут считаться (и не обязаны быть) достоверными, не имеют документального \n            подтверждения, и не должны использоваться как официальный источник информации. </p>\n    <li><h2>Использование информации</h2></li>\n        <p>Администрация осуществляет сбор, обработку и хранение информации Пользователя (в том числе и персональных данных) \n            для корректной работы Приложения. Так Email адрес используется как уникальный login при аутентификации. Также \n            Email адрес может использоваться для восстановления пароля.</p>\n        <p>Вся информация, вводимая Пользователем, хранится в базе данных и обрабатывается автоматически при рендеринге \n            страницы.</p>\n    <li><h2>Передача информации</h2></li>\n        <p>Все данные и записи Пользователя являются конфиденциальными, не используются Администрацией в личных целях\n             и не передаются третьим сторонам, за исключением случаев, когда передачу соответствующим органам требует \n             Законодательство Российской Федерации</p>\n    <li><h2>Защита информации</h2></li>\n        <p> Администрация принимает технические и организационно-правовые меры в целях обеспечения защиты информации о \n            Пользователях от неправомерного или случайного доступа к ним, уничтожения, изменения, блокирования, копирования, \n            распространения, а также от иных неправомерных действий.</p>\n    <li><h2>Права и ответственность сторон</h2></li>\n        <p>Администрация обязуется соблюдать правила настоящей Политики, и за нарушение данной несет ответственность по \n            действующему законодательству Российской Федерации.</p>\n        <p>Администрация не несет ответственности за разглашение информации о Пользователе, если передачу соответствующим \n            органам требует законодательство Российской Федерации.</p>\n        <p>Администрация не несет ответственности за разглашение, распространение, удаление или изменения информации о Пользователе, если у\n             Пользователя каким-либо способом были украдены login c паролем, или ключи сессии.</p>\n        <p>Пользователь обязан согласиться с настоящей Политикой при регистрации, поставив галочку в соответствующем поле \n            формы.</p>\n        <p>Пользователь может удалить свой аккаунт, информация о Пользователе хранится согласно пункту 7 данной Политики.</p>\n    <li><h2>Хранения информации</h2></li>\n    <p>Информация о Пользователе хранится Администрацией бессрочно до тех пор, пока Пользователь не удалит свой аккаунт,\n         или Приложение не перестанет  существовать, а после этого – в течение срока, необходимого и установленного \n         действующим законодательством Российской Федерации.</p>\n    <p> Администрация не обязана передавать записи Пользователю при их потере Пользователем</p>\n    <p> Администрация не несет ответственность за потерю информации по техническим причинам или ошибкам, если эти технические \n        ошибки или причины вызваны не по вине Администрации.</p>\n    <li><h2>Изменения и дополнения настоящей Политики</h2></li>\n    <p>Настоящая Политика может быть изменена Администрацией с уведомлением Пользователя посредством \n        размещения новой редакции изменяемой политики на сайте (Приложении). Изменения в Политике, внесенные Администрацией, \n        вступают в силу с момента размещения на сайте (Приложении) новой редакции такой Политики.</p>\n    <p>Вопросы, не урегулированные настоящей Политикой, подлежат разрешению в соответствии с законодательством Российской\n         Федерации.</p>\n    <br> <br>\n    <i>Редакция от 26.01.2021</i>\n</ol>\n<div style=\"height: 100px;\"></div>\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {  ReactiveFormsModule } from '@angular/forms';\r\n\r\n/* ------------------------------- components ------------------------------- */\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { TopComponent } from './top/top.component';\r\nimport { CurrentPeriodComponent } from './current-period/current-period.component';\r\nimport { BudgetItemFormComponent } from './current-period/budget-item-form/budget-item-form.component';\r\nimport { TableComponent } from './current-period/table/table.component';\r\nimport { RegComponent } from './reg/reg.component';\r\nimport { MainComponentComponent } from './main-component/main-component.component';\r\nimport { PrivacyComponent } from './privacy/privacy.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ChangePassComponent } from './change-pass/change-pass.component';\r\nimport { CustomizationComponent } from './customization/customization.component';\r\nimport { DeleteAkkComponent } from './delete-akk/delete-akk.component';\r\n\r\n/* ----------------------------- materialize.io ----------------------------- */\r\n\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\n\r\n/* --------------------------- service and classes -------------------------- */\r\n\r\nimport { AuthService } from './library/auth.service';\r\nimport { HostService } from './library/host.service';\r\nimport { BudgetItemsService } from './budget-items.service';\r\n\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TopComponent,\r\n    CurrentPeriodComponent,\r\n    BudgetItemFormComponent,\r\n    TableComponent,\r\n    RegComponent,\r\n    MainComponentComponent,\r\n    PrivacyComponent,\r\n    LoginComponent,\r\n    ChangePassComponent,\r\n    CustomizationComponent,\r\n    DeleteAkkComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatIconModule,\r\n    MatTabsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatAutocompleteModule,\r\n    ReactiveFormsModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSnackBarModule,\r\n    MatMenuModule,\r\n    MatDialogModule,\r\n    HttpClientModule,\r\n    MatCheckboxModule\r\n  ],\r\n  providers: [AuthService, HostService, BudgetItemsService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { BudgetItem } from './budget-item';\nimport {BudgetItemsService} from './budget-items.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TotalBudgetService {\n \n  totalBudget: number = 0;\n  \n  constructor(private budgetItemsService: BudgetItemsService ) { \n    this.budgetItemsService.subject.subscribe({next: (bItems: [BudgetItem])=>{\n      this.totalBudget = 0;\n      bItems.forEach(item =>  this.totalBudget+=item.amount);\n      this.subject.next(this.totalBudget);\n    }})\n    this.budgetItemsService.getBudgetItems();\n  }\n\n  subject = new Subject<number>();\n\n  getTotalBudget(){\n    this.subject.next(this.totalBudget);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { AnswerAuth } from '../library/answer-auth';\r\nimport { AuthService } from '../library/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-delete-akk',\r\n  templateUrl: './delete-akk.component.html',\r\n  styleUrls: ['./delete-akk.component.scss']\r\n})\r\nexport class DeleteAkkComponent implements OnInit {\r\n\r\n\r\n  deleteAkkForm: FormGroup = new FormGroup({\r\n    oldPass: new FormControl(null, Validators.required),\r\n  \r\n  });\r\n\r\n  constructor(\r\n    private authService:AuthService,\r\n    private _snackBar: MatSnackBar,\r\n    private router: Router,\r\n    public dialogRefDel: MatDialogRef<DeleteAkkComponent>,\r\n\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  submit(  ){\r\n    let body = {\r\n      pass: this.deleteAkkForm.value.oldPass,\r\n      accessToken: localStorage.getItem(\"accessToken\")\r\n    }\r\n    this.authService.deleteAkk(body).subscribe(\r\n      (data: AnswerAuth)=>{\r\n        if(data.success){\r\n          this._snackBar.open(data.msg, \"Успешно\", {duration:2000});\r\n          this.dialogRefDel.close();\r\n          window.location.reload();\r\n          \r\n        }else{\r\n          this._snackBar.open(data.msg, \"Ошибка\");\r\n        }\r\n      }\r\n    )\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <h1>Удалить аккаунт</h1>\r\n    <form class=\"example-form\" [formGroup]=\"deleteAkkForm\" (ngSubmit)=\"submit()\">\r\n        <mat-form-field >\r\n            <input placeholder=\"password\" matInput type=\"password\" formControlName=\"oldPass\">\r\n            <mat-error *ngIf=\"deleteAkkForm.controls.oldPass.invalid\">Введите пароль</mat-error>\r\n        </mat-form-field>\r\n        <br> \r\n\r\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"deleteAkkForm.invalid\">Удалить аккаунт</button>\r\n\r\n    </form>\r\n    \r\n    <span class=\"xbutton\"> <button mat-icon-button mat-dialog-close>\r\n            <mat-icon>close</mat-icon>\r\n        </button></span>\r\n</div>\r\n","\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport {BudgetItem} from '..//app/budget-item'; \nimport { AnswerAuth } from './library/answer-auth';\nimport { AuthService } from './library/auth.service';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BudgetItemsService {\n\n  private budgetItems: BudgetItem[]=[  ]; \n   subject = new Subject<BudgetItem[]>();\n  \n\n  constructor(\n    private authService: AuthService\n    ) { }\n\n  \n  \n  addBudgetItem(item: BudgetItem){\n    this.budgetItems.push(item);\n    this.sortBudgetItems();\n    this.subject.next(this.budgetItems);\n\n    this.authService.sendAddItem(item).subscribe(\n      (data:AnswerAuth)=>{\n        if (data.msg==\"logout\"){ \n          this.clearBudgetItems()\n        }\n      }\n    );\n\n  }\n\n\n\n  getBudgetItems(){\n    this.subject.next(this.budgetItems);\n  }\n\n\n\n    \n\n\n  private sortBudgetItems(){\n    this.budgetItems.sort((a,b):number=>{\n      return (+(new Date(b.date)) - +(new Date(a.date)))\n    })\n    console.log( this.budgetItems)\n\n  }\n  deleteBudgetItem(index){\n    let itemID = this.budgetItems[index].itemID;\n    this.budgetItems.splice(index,1);\n    this.subject.next(this.budgetItems);\n\n    this.authService.sendDeleteItem(itemID).subscribe(\n      (data:AnswerAuth)=>{\n        if (data.msg==\"logout\"){ \n          this.clearBudgetItems()\n        }\n      }\n    )\n  }\n\n  clearBudgetItems(isSubject = true){\n    this.budgetItems=[];\n    if (isSubject) this.subject.next(this.budgetItems);\n  }\n\n  async pushAllBudgetItems(){\n    for ( let item of this.budgetItems){\n      await this.authService.sendAddItem(item).subscribe(\n        err=> console.log(err)\n      )\n    }\n    return true\n  }\n\n  fetchBudgetItems(){\n    this.authService.sendFetchBudgetItems().subscribe(\n      (data:AnswerAuth)=>{\n        if(data.success){\n          this.budgetItems = data.budgetItems;\n          this.sortBudgetItems();\n          this.subject.next(this.budgetItems);\n        }\n      }\n    )\n  }\n}\n\n","import { Component, OnInit} from '@angular/core';\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AuthService } from '../library/auth.service';\nimport { RegFormValues } from '../library/reg-form-values';\nimport { MatDialogRef} from '@angular/material/dialog';\n\nimport { BudgetItemsService } from '../budget-items.service';\nimport { AnswerAuth } from '../library/answer-auth';\nimport { Router } from '@angular/router';\n \n\n@Component({\n  selector: 'app-reg',\n  templateUrl: './reg.component.html',\n  styleUrls: ['./reg.component.scss']\n})\nexport class RegComponent implements OnInit {\n\n\n\n  regForm: FormGroup = new FormGroup({\n    name: new FormControl( null, Validators.required),\n    email: new FormControl(null, [Validators.required, Validators.email]),\n    password: new FormControl(null, Validators.required),\n    privacyPolicy: new FormControl(false, this.privacyPolicyValidator),   \n    isSaveTable: new FormControl(true), \n  });\n\n  constructor(\n    private authService: AuthService, \n    private _snackBar: MatSnackBar, \n    public dialogRef: MatDialogRef<RegComponent>,\n    private budgetItemService: BudgetItemsService,\n    private router: Router,\n    ) { }\n\n  ngOnInit(): void {\n  }\n\n \n  submit(){\n    let regFormSubmit:RegFormValues= this.regForm.value;\n    this.authService.registerUser(regFormSubmit).subscribe(\n      (data:AnswerAuth)=>{ \n        if(data.success){ \n          \n          this._snackBar.open(data.msg, \"Успешно!\", {\n            duration: 2000,\n          });\n\n          this.dialogRef.close();\n          this.authService.loginUser({email: regFormSubmit.email, password: regFormSubmit.password, isSaveTable: regFormSubmit.isSaveTable }).subscribe(\n            (data:AnswerAuth)=>{\n              if (data.success){\n                if(regFormSubmit.isSaveTable)  this.budgetItemService.pushAllBudgetItems();\n              } else this._snackBar.open(data.msg, \"Ошибка!\");\n            }\n          )\n        }\n        else{\n          this._snackBar.open(data.msg, \"Ошибка!\");\n        }\n      },\n      err=>{\n        console.log(err); \n        this._snackBar.open(err.message, \"Ошибка!\")\n      }\n    )//end subscribe of registerUser\n  }\n\n  showPrivacyPolicy(){\n    window.open(this.router.serializeUrl(this.router.createUrlTree([\"/privacy\"])));\n    return false;\n  }\n\n  privacyPolicyValidator(control: FormControl): {[s:string]:boolean}{\n         \n    if(control.value===false){\n        return {\"privacyPolicy\": true};\n    }\n    return null; \n  }\n}\n","<div class=\"container pading\">\n    <h1>Форма регистрации</h1>\n    <form class=\"example-form\" [formGroup]=\"regForm\" (ngSubmit)=\"submit()\">\n        <mat-form-field>\n            <input placeholder=\"имя\" matInput type=\"text\" formControlName=\"name\">\n            <mat-error *ngIf=\"regForm.controls.name.invalid\">Введите имя</mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field>\n            <input placeholder=\"email\" matInput type=\"email\" formControlName=\"email\">\n        </mat-form-field>\n        <br>\n        <mat-form-field>\n            <input placeholder=\"password\" matInput type=\"password\" formControlName=\"password\">\n            <mat-error *ngIf=\"regForm.controls.password.invalid\">Введите пароль</mat-error>\n        </mat-form-field>\n        <br>\n        <mat-checkbox formControlName=\"privacyPolicy\" class=\"example-margin\">\n            Я соглашаюсь с <a href=\"http://localhost:4200/privacy\" style=\"white-space:pre-line\" (click)='showPrivacyPolicy()'>Политикой конфидециальности</a>\n        </mat-checkbox>\n        <br>\n        <mat-checkbox formControlName=\"isSaveTable\" class=\"example-margin\" >\n           <span  style=\"white-space:pre-line\" > Сохранить текущие данные <br>из таблицы  (если они есть)</span> \n        </mat-checkbox>\n        <br>\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"regForm.invalid\">Зарегистрироваться</button>\n\n    </form>\n    <span class=\"xbutton\"> <button mat-icon-button mat-dialog-close>\n            <mat-icon>close</mat-icon>\n        </button></span>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BudgetItemsService } from '../budget-items.service';\nimport { CustomizationComponent } from '../customization/customization.component';\nimport { AnswerAuth } from '../library/answer-auth';\nimport { AuthService } from '../library/auth.service';\nimport { LoginComponent } from '../login/login.component';\nimport { RegComponent } from '../reg/reg.component';\n\n@Component({\n  selector: 'app-top',\n  templateUrl: './top.component.html',\n  styleUrls: ['./top.component.scss']\n})\nexport class TopComponent implements OnInit {\n\n  isLogin = false;\n\n  name:string; \n  \n  constructor(\n    public dialog: MatDialog, \n    private authService: AuthService,\n    private _snackBar: MatSnackBar, \n    private budgetItemsService: BudgetItemsService,\n\n    ) { }\n\n  ngOnInit(): void {\n    \n    this.authService.subject.subscribe({next: userName=>{\n      this.name = userName;\n      this.isLogin =!!userName;\n    }});\n    this.authService.getUserName();\n  }\n\n  showRegForm(){\n    this.dialog.open(RegComponent,{width:'300px'});\n  }\n  \n  showLoginForm(){\n    this.dialog.open(LoginComponent);\n  }\n\n  logOut(){\n    this.authService.logOut().subscribe(\n      (data:AnswerAuth)=> {\n        if(data.success){\n          this.budgetItemsService.clearBudgetItems();\n          this._snackBar.open(data.msg, \"Успешно!\", {\n            duration: 2000,\n          })\n        }\n        else this._snackBar.open(data.msg, \"Ошибка!\");\n      }\n    )\n  }\n  customization(){\n    this.dialog.open(CustomizationComponent,{autoFocus:false});\n  }\n\n\n}\n","\n<div mat-dialog-content class=\"oun-title\" style=\"margin: 0;padding: 0;\">\n  <span  style=\"text-align: center; width: 100%; position: absolute;\">\n    <h1  class=\"total-badget\" >твой бюджет</h1>\n  </span>\n  <span *ngIf = '!isLogin; else unset1' style=\"text-align: center;\"> Вход <br> не выполнен</span>\n  <ng-template #unset1><span > {{name}}</span></ng-template>\n  \n  <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\n    <mat-icon *ngIf=\"!isLogin\">login</mat-icon>\n    <mat-icon *ngIf=\"isLogin\">logout</mat-icon>\n    <!-- <mat-icon *ngIf=\"isLogin\">account_circle</mat-icon> -->\n  </button>\n  \n  <mat-menu #menu=\"matMenu\">\n\n    <button *ngIf = 'isLogin; else unset' mat-menu-item (click)=\"logOut()\">\n      <snpan >Выйти</snpan>\n    </button>\n    <button *ngIf = 'isLogin' mat-menu-item (click)=\"customization()\">\n      <snpan >Настройки</snpan>\n    </button>\n    \n    <ng-template #unset>\n      <button mat-menu-item (click)=\"showLoginForm()\" >\n        <span >Войти</span>\n      </button>\n      <button mat-menu-item (click)=\"showRegForm()\">\n        <span>Зарегестрироваться</span>\n      </button>\n    </ng-template>\n\n  </mat-menu>\n\n\n\n<!--   <span *ngIf=\"!isLogin\" class=\"oun-input-icon\">\n     <mat-icon  class=\"oun-input-icond\"   >person_outline</mat-icon>\n     Вход</span>\n  <span  *ngIf=\"isLogin\"class=\"oun-input-icon\">\n    <mat-icon  class=\"oun-input-icond\"  >how_to_reg</mat-icon>\n    Выход </span> -->\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MainComponentComponent } from './main-component/main-component.component';\nimport { PrivacyComponent } from './privacy/privacy.component';\n\nconst routes: Routes = [\n{ path: '', component: MainComponentComponent}, \n{ path: 'privacy', component: PrivacyComponent},\n{ path: 'forgetPass',  component: MainComponentComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BudgetItemsService } from '../budget-items.service';\r\nimport { AnswerAuth } from '../library/answer-auth';\r\nimport { AuthService } from '../library/auth.service';\r\nimport { UserLoginForm } from '../library/user-login-form';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup = new FormGroup({\r\n    email: new FormControl(null, [Validators.required, Validators.email]),\r\n    password: new FormControl(null, Validators.required),\r\n    isSaveTable: new FormControl(true),\r\n  });\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<LoginComponent>,\r\n    private authService: AuthService,\r\n    private _snackBar: MatSnackBar,\r\n    private budgetItemsService: BudgetItemsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  submit() {\r\n    let loginFormSubmit: UserLoginForm = this.loginForm.value;\r\n    this.authService.loginUser(loginFormSubmit).subscribe(\r\n      (data: AnswerAuth) => {\r\n        if (data.success) {\r\n          this.dialogRef.close();\r\n          this._snackBar.open(data.msg, \"Успешно!\", {\r\n            duration: 2000,\r\n          });\r\n          if (loginFormSubmit.isSaveTable) {\r\n            this.budgetItemsService.pushAllBudgetItems().then(\r\n              value => {\r\n                this.budgetItemsService.clearBudgetItems(false);\r\n                this.budgetItemsService.fetchBudgetItems();\r\n                window.location.reload();\r\n              }\r\n            )\r\n          }else{\r\n            this.budgetItemsService.clearBudgetItems(false);\r\n            this.budgetItemsService.fetchBudgetItems();\r\n          }\r\n\r\n        }\r\n        else this._snackBar.open(data.msg, \"Ошибка!\");\r\n      }\r\n    )\r\n\r\n  }\r\n  \r\n  forgotPass(){\r\n    let loginFormSubmit: UserLoginForm = this.loginForm.value;\r\n    if(!loginFormSubmit.email) this._snackBar.open(\"Введите Email\", \"Ошибка!\");\r\n     else{\r\n       if(!loginFormSubmit.isSaveTable) this.budgetItemsService.clearBudgetItems();\r\n      this.authService.forgetPass(loginFormSubmit.email).subscribe(\r\n        (data:AnswerAuth)=>{\r\n          if(data.success) this._snackBar.open(\"На Ваш Email сейчас прийдет письмо с сылкой для смены пароля. Пожалуйста перейдите по ней\",\"Успешно!\");\r\n          else{\r\n            if(data.msg == \"No user\") this._snackBar.open(\"Пользователь не найден\", \"Ошибка!\");\r\n          }\r\n        },\r\n        err=> console.log(err)\r\n      )\r\n    } \r\n    return false\r\n  }\r\n\r\n}\r\n","<div class=\"container pading\">\n    <h1>Вход</h1>\n    <form class=\"example-form\" [formGroup]=\"loginForm\" (ngSubmit)=\"submit()\">\n        <mat-form-field>\n            <input placeholder=\"email\" matInput type=\"email\" formControlName=\"email\">\n        </mat-form-field>\n        <br>\n        <mat-form-field>\n            <input placeholder=\"password\" matInput type=\"password\" formControlName=\"password\">\n            <mat-error *ngIf=\"loginForm.controls.password.invalid\">Введите пароль</mat-error>\n        </mat-form-field>\n        <br> \n        <a href=\"\" (click)=\"forgotPass()\">Забыли пароль</a>\n        <br>\n        <mat-checkbox formControlName=\"isSaveTable\" class=\"example-margin\" >\n            <span  style=\"white-space:pre-line\" > Сохранить текущие данные из <br> таблицы (если они есть)</span> \n         </mat-checkbox>\n         <br>\n\n         <br>\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"loginForm.invalid\">Войти</button>\n\n    </form>\n    \n    <span class=\"xbutton\"> <button mat-icon-button mat-dialog-close>\n            <mat-icon>close</mat-icon>\n        </button></span>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}